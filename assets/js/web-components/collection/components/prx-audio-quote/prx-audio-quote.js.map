{"version":3,"file":"prx-audio-quote.js","sourceRoot":"","sources":["../../../src/components/prx-audio-quote/prx-audio-quote.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Prop, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'prx-audio-quote',\n  styleUrl: 'prx-audio-quote.css',\n  shadow: false,\n  scoped: true\n})\nexport class PrxAudioQuote {\n\n  @Element() el: HTMLElement;\n\n  @Prop() src: string;\n\n  @Prop() transcriptUrl: string;\n\n  @State() playing: boolean = false;\n\n  @State() progress: number = 0;\n\n  private audioEl: HTMLAudioElement;\n\n  private trackEl: HTMLTrackElement;\n\n  private wordSpans: HTMLSpanElement[] = [];\n\n  private currentWordIndex: number = 0;\n\n  private wrapWordsInSpans = (node: Node) => {\n    const self = this;\n\n    // If the node is a Text Node\n    if (node.nodeType === Node.TEXT_NODE) {\n      const textContent = node.textContent.trim(); // Get and trim the text content\n      if (textContent.length > 0) { // Only process if there's actual text\n        const words = textContent.split(/\\s+/); // Split text into words by whitespace\n\n        // Create a DocumentFragment to efficiently build the new content\n        const fragment = document.createDocumentFragment();\n\n        words.forEach((word, index) => {\n          // Avoid creating spans for empty strings if multiple spaces were present.\n          if (word.length > 0) {\n            const span = document.createElement('span');\n            span.textContent = word;\n            span.classList.add('word');\n            // span.addEventListener('click', self.handleWordClick);\n            fragment.appendChild(span);\n            self.wordSpans.push(span);\n            // Add a space after each word except the last one\n            if (index < words.length - 1 || node.nextSibling) {\n              fragment.appendChild(document.createTextNode(' '));\n            }\n          }\n        });\n\n        // Replace the original text node with the new fragment\n        node.parentNode.replaceChild(fragment, node);\n      }\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      // If the node is an Element Node, iterate through its children\n      // Create a copy of childNodes to avoid issues when modifying the DOM during iteration\n      const children = Array.from(node.childNodes);\n      children.forEach(child => this.wrapWordsInSpans(child)); // Recursively call for each child\n    }\n  }\n\n  private prepareWordForCompare = (word: string) => word.replaceAll(/[^\\w]/g,'').toLowerCase();\n\n  private reset = () => {\n    this.audioEl.currentTime = 0;\n    this.currentWordIndex = 0;\n    this.wordSpans.forEach((span) => span.classList.remove('heard', 'active'));\n  }\n\n  private handleCueChange = (e: Event) => {\n    const cues = (e.target as HTMLTrackElement).track.activeCues;\n    const cue = cues[0] as VTTCue;\n    const { text, startTime } = cue || {};\n\n    if (!text) return;\n\n    const word = this.prepareWordForCompare(text);\n    const activeSpan = this.el.querySelector('span.word.active');\n    const currentWordIndex = this.currentWordIndex + this.wordSpans.slice(this.currentWordIndex)\n      .findIndex((span) => {\n        return this.prepareWordForCompare(span.textContent) === word;\n      });\n\n    if (currentWordIndex < 0 || currentWordIndex > this.currentWordIndex + 3) {\n      console.log(`Transcript word out of sync with quote text. \"${text}\" @ ${startTime} seconds.`);\n      return;\n    }\n\n    const currentSpan = this.wordSpans.at(currentWordIndex);\n\n    activeSpan?.classList.remove('active');\n    this.wordSpans.forEach((span) => { span.classList.remove('heard'); });\n\n    if (!this.playing) return;\n\n    currentSpan.classList.add('active');\n    this.wordSpans.slice(0, currentWordIndex).forEach((span) => { span.classList.add('heard'); });\n\n    this.currentWordIndex = currentWordIndex;\n  }\n\n  private handlePlayToggleClick = () => {\n    const { paused } = this.audioEl;\n\n    if (paused) {\n      this.audioEl.play();\n    } else {\n      this.audioEl.pause();\n    }\n  }\n\n  private handleRestartClick = () => {\n    this.reset();\n  }\n\n  connectedCallback() {\n    const { el, src, transcriptUrl } = this;\n\n    if (!src) return;\n\n    // Prepare text content for highlighting.\n    const blockquote = el.querySelector('blockquote');\n    if (transcriptUrl && !blockquote) {\n      const citeElement = el.querySelector('[slot=citation]');\n\n      // Temporarily remove citation element so it doesn't get words wrapped.\n      citeElement?.remove();\n\n      this.wrapWordsInSpans(el);\n\n      // Restore citation element.\n      el.appendChild(citeElement);\n    }\n\n    // Initialize audio element.\n    this.audioEl = document.createElement('audio');\n    this.audioEl.crossOrigin = \"anonymous\";\n    this.audioEl.preload = \"none\";\n    this.audioEl.src = src;\n    this.audioEl.addEventListener('timeupdate', () =>{\n      const { currentTime, duration } = this.audioEl;\n      this.progress = currentTime / duration;\n    });\n    this.audioEl.addEventListener('play', () => { this.playing = true; });\n    this.audioEl.addEventListener('pause', () => {\n      this.playing = false;\n      // this.reset();\n    });\n    this.audioEl.addEventListener('ended', () => {\n      this.reset();\n    });\n\n    // Initialize track element.\n    if (this.transcriptUrl?.length) {\n      this.trackEl = document.createElement('track');\n      this.trackEl.default = true;\n      this.trackEl.kind = 'captions';\n      this.trackEl.src = transcriptUrl;\n      this.trackEl.addEventListener('cuechange', this.handleCueChange);\n\n      this.audioEl.appendChild(this.trackEl);\n    }\n  }\n\n  disconnectCallback() {\n    this.audioEl = null;\n    this.trackEl = null;\n  }\n\n  render() {\n    const { playing, progress, src, transcriptUrl, handlePlayToggleClick, handleRestartClick } = this;\n    const hasAudio = !!src?.length;\n    const hasTranscript = !!transcriptUrl?.length;\n\n    return (\n      <Host playing={playing} highlight={hasTranscript} style={{ '--prx-audio-quote--progress': `${progress}` }}>\n        <blockquote>\n          <prx-quote><slot></slot></prx-quote>\n          <cite><slot name='citation'></slot></cite>\n          {hasAudio && (\n            <prx-audio-quote-controls>\n              <button type=\"button\" class=\"restart-button\" onClick={handleRestartClick} aria-label=\"Restart\"></button>\n              <button type=\"button\" class=\"play-button\" onClick={handlePlayToggleClick} aria-label={playing ? 'Pause' : 'Play'}>\n                <span class=\"play-icon\"></span>\n              </button>\n            </prx-audio-quote-controls>\n          )}\n        </blockquote>\n      </Host>\n    );\n  }\n}\n"]}